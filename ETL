import requests
import pandas as pd
from sqlalchemy import create_engine

# Configuração do banco de dados
DB_CONN = "postgresql+psycopg2://user:password@localhost:5432/meudb"
engine = create_engine(DB_CONN)

# Função de extração de dados da API
def extract_api():
    url = "https://jsonplaceholder.typicode.com/posts"
    response = requests.get(url)
    data = response.json()
    df = pd.DataFrame(data)
    return df

# Função de extração do PostgreSQL
def extract_db():
    query = "SELECT id, name, email FROM users"
    df = pd.read_sql(query, engine)
    return df

# Transformação dos dados
def transform_data(api_df, db_df):
    api_df = api_df[['id', 'title', 'body']]
    db_df = db_df.rename(columns={'id': 'user_id'})
    merged_df = api_df.merge(db_df, left_on='id', right_on='user_id', how='left')
    merged_df = merged_df.dropna()
    return merged_df

# Carregamento dos dados transformados
def load_data(df):
    df.to_sql("final_table", engine, if_exists="replace", index=False)

# Pipeline ETL
def etl_pipeline():
    api_data = extract_api()
    db_data = extract_db()
    transformed_data = transform_data(api_data, db_data)
    load_data(transformed_data)
    print("ETL concluído com sucesso!")

# Executar ETL
if __name__ == "__main__":
    etl_pipeline()
